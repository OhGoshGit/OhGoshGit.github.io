---
title: "あぁぁ... GitHubとGitLabのリモートに同時にプッシュするにはどうすればええんや？"
author: 
   - name: "Ryo Nakagami"
     url: https://github.com/RyoNakagami
date: "2024-11-01"
categories: [git push]
---

## 問題

ローカルのGitブランチ `feature/ml-prediction-enhancement` で作業をしているとします．
このプロジェクトをGitHubとGitLabの両方にプッシュしたいと考えています．

<strong > &#9654;&nbsp; 例</strong>

- バージョン管理とコラボレーションのためにGitHubにコードをプッシュしながら，アプリケーションのホスティングのためにHerokuサーバーにもデプロイしたい場合

## 解決策

Gitでは，1つのプロジェクトに対して複数のリモートリポジトリを設定することができます．これにより，GitHubやGitLabなど，異なるホスティングサービスに同時にプロジェクトをプッシュすることが可能になります．

<strong > &#9654;&nbsp; 手順</strong>

セットアップ方法は以下の通りです：

1. `git remote add` コマンドを使用して複数のリモートを追加
2. `git remote -v` でリモートを確認
3. 複数のリモートにプッシュ


<strong > &#9654;&nbsp; コマンド</strong>

`hoshinokirby` という名前のローカルGitプロジェクトで作業していて，このプロジェクトをGitHubとGitLabの両方にプッシュしたいとします．

```zsh
# Step 1: Add multiple Remotes
git remote add github https://github.com/user-name/hoshinokirby.git
git remote add gitlab https://gitlab.com/user-name/hoshinokirby.git

# Step 2: Check Your Remotes
git remote -v
```

出力は以下のようになります：

```zsh
github    https://github.com/user-name/hoshinokirby.git (fetch)
github    https://github.com/user-name/hoshinokirby.git (push)
gitlab    https://gitlab.com/user-name/hoshinokirby.git (fetch)
gitlab    https://gitlab.com/user-name/hoshinokirby.git (push)
```

その後，

```zsh
# Step 3: Push to Both Remotes:
git push github feature/ml-prediction-enhancement
git push gitlab feature/ml-prediction-enhancement
```

::: {.nte- .callout-tip icon="false"}
# 🍵 Green Tea Break: **リモートの削除**

Gitリポジトリに誤ったリモートを追加してしまい，削除したい場合は，`git remote remove` コマンドを使用できます．リモートを削除すると，ローカルの設定のみが影響を受け，リモートリポジトリ自体には影響しません．

```zsh
# remove the remote
git remote remove <remote-name>

# shorthand version
git remote rm <remote-name>
```

上記のコマンドを実行する前に，誤って削除しないよう，リモート名を必ず確認してください．

:::

### シェルスクリプトで両方のリモートへのプッシュを自動化

以下のスクリプトは，設定されているすべてのGitリモートに指定されたブランチをプッシュするように設計されています．

```bash
#!/bin/bash
#--------------------------------------
# Description
#   The script iterates over each remote and pushes the specified branch to it 
#   using the git push command. The script retrieves the list of configured Git remotes 
#   using the git remote command and stores it in the variable REMOTES.
#   If no remotes are found, the script prints an error message and exits with a status code of 1.
#--------------------------------------


# Check if branch name is provided
if [ -z "$1" ]; then
  echo "Usage: $0 <branch-name>"
  exit 1
fi

# Define the branch name
BRANCH_NAME=$1

# Get the list of remotes
REMOTES=$(git remote)

# Check if there are any remotes configured
if [ -z "$REMOTES" ]; then
  echo "No remotes found. Please configure a remote repository."
  exit 1
fi

# Push to each remote
echo "$REMOTES" | while read -r REMOTE; do
    git push "$REMOTE" "$BRANCH_NAME"
done

exit 0
```

このスクリプトを使用するには，以下の手順に従ってください：

1. スクリプトをファイルに保存します（例：`push_to_remotes.sh`）
2. スクリプトを実行可能にします：

```zsh
chmod +x push_to_remotes.sh
```

3. ブランチ名を引数として指定してスクリプトを実行します：

```zsh
./push_to_remotes.sh <branch-name>

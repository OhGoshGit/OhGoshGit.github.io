---
title: "あぁぁ... ローカルのGitブランチを異なる名前でリモートにプッシュしたい..."
author: 
   - name: "Ryo Nakagami"
     url: https://github.com/RyoNakagami
date: "2024-10-31"
categories: [git branch]
---

## 問題

ローカルのGitブランチ名が `feature/ml-prediction-enhancement` だとします．
このブランチをリモートリポジトリにプッシュしようとした時，ブランチの命名規則に従っていないことに気付きました．
正しい形式は `dev-2.2.x-0001/ml-prediction-enhancement` であるべきでした．

## 解決策

この問題を解決するには2つの方法があります：

1. ローカルブランチ名を命名規則に従って変更してからリモートにプッシュする
2. ローカルブランチ名は変更せずに，正しいブランチ名でリモートにプッシュする

### 解決策1：ローカルブランチ名を変更する
---

ローカルブランチの名前変更については[こちらの投稿](https://ohgoshgit.github.io/posts/2024-07-13-fix-wrong-branchname/index.html)で説明しています．

<strong > &#9654;&nbsp; コマンド</strong>

```zsh
# Step 1: rename your local branch
git branch -m <old-name> <new-name>

# Step 2: push to the remote
git push -u origin HEAD
```

### 解決策2：ローカルGitブランチを異なる名前でリモートにプッシュ
---

`git push origin local-branch-name:remote-branch-name` は，ローカルブランチ `local-branch-name` を
リモートリポジトリ `origin` に `remote-branch-name` という名前でプッシュ（作成/更新）するようGitに指示します．

ただし，このコマンドにはリスクが伴うことに注意してください．もし `remote-branch-name` が既にリモートリポジトリに存在する場合，
このコマンドはそのブランチをローカルブランチの内容で上書きします．
他の人がそのリモートブランチを使用している場合，あなたのプッシュが彼らの変更を上書きし，潜在的な競合や作業の損失を引き起こす可能性があります．

上記のリスクを軽減するため，`git fetch` と `git branch -a` でリモートブランチの状態を先に確認することをお勧めします．
`git push --force` は使用しないでください．

<strong > &#9654;&nbsp; コマンド</strong>

```zsh
# Step 1: git fetch and check your remote
git fetch 

# Step 2: Make sure your new remote name will not cause a problem
git branch -a  

# Step 3: Push your local branch with different remote name
git push origin local-branch-name:remote-branch-name
```

::: {.nte- .callout-tip icon="false"}
# 🍵 Green Tea Break: なぜ `git pull` ではなく `git fetch` を使用するのか？

<strong > &#9654;&nbsp; `git fetch` はローカルの作業を変更しません</strong>

- `git fetch` はリモートリポジトリからの更新をダウンロードするだけで，作業ディレクトリを変更したり，これらの変更を現在のブランチにマージしたりしません．
- `git pull` は `git fetch` と `git merge` を組み合わせたもので，リモートから変更を取得し，すぐにそれらを現在のブランチにマージします．ブランチ間に差異がある場合，これは競合を引き起こす可能性があります．

名前の競合を避けるためにリモート情報を取得したいだけで，リモートの変更をローカルブランチに取り込む意図がない場合は，予期しないマージを避けるために `git fetch` を使用する方が良いでしょう．

:::


## ユースケース

<strong > &#9654;&nbsp; 一時的な作業の共有</strong>

レビューや助言を求めるために一時的に作業を共有したい場合，既存のリモートブランチを上書きしたくないかもしれません．その場合，`temp/20241031-login-test` のような一時的な名前でローカルブランチをプッシュすることをお勧めします．

<strong > &#9654;&nbsp; 名前の競合を避ける</strong>

リモートに同じ名前のブランチが既に存在する場合，競合を避けるために異なる名前でローカルブランチをプッシュしたい場合があります．例えば，リモートに既に `feature/login` というブランチが存在する場合，
ローカルの `feature/login` ブランチを `feature/login-update` としてプッシュすることができます．

この場合，リモートへのプッシュ後，upstreamブランチが意図したブランチを指していることを確認してください．
以下のコマンドを実行することをお勧めします：

```zsh
git branch -vvv
```

そして，結果が期待通りでない場合は，以下のコマンドを実行して：

```zsh
git branch --set-upstream-to=origin/new-feature
```

upstreamブランチを正しいものに設定することができます．